section
  h1= title
  h2.author= author
  img.logo(src='img/logo.png')
section
  section
    h2 What I do
    img.featured(src='img/tech.svg')
    aside.notes
      p Full-stack software developer - building bits of the internet.
      p "Helping startups get started" - you have the idea, the money and the expertise, I'll bring the tech.
      p What I build are apps - strictly speaking - and not websites.
  section
    h2 USDL technologists
    img.featured(src='img/technologists.svg')
    aside.notes
      p Loose network of technical professionals.
      p Brought in halfway through the process, when the problem has been distilled down to a single question.
      p From my perspective, our job is to help find a simple technological solution to that single question, which can be implemented in 2 weeks or less.
      p This is like a micro version of the way I innovate with all my clients.
section
  section
    h2 The idea
    img.featured(src='img/idea.png')
    aside.notes
      p Typically when someone comes to me, they have a pretty good idea what it is they want.
      p Some software developers just take these ideas and run with them - producing exactly what's in the client's head.
      p I prefer to innovate together with the client, finding the best union of the client's domain expertise and my understanding of the technology.
      p A good example is mobile apps - is that really what you need? Or is it an unnecessary expense, when solutions like PWA exist?
  section
    h2 The right questions
    img.featured(src='img/detective.svg')
    aside.notes
      p The most important part of innovation is asking the right questions.
      p Questions to help understanding the domain better and respecting the client's knowledge
      p Questioning whether something is technologically possible
      p Questioning the approach. Is it financially feasible - is there a simpler solution that can provide the same results?
      p Taking into account trends or changes in the industry - things I have to keep on top of but the client might not know. For example, PWA, SPA, changes in autoplay functionality, etc.
  section
    h2 Thinking like a machine
    img.featured(src='img/brain.svg')
    aside.notes
      p So much of software engineering is breaking free of human thought and thinking like a computer.
      p Examples:
      ul
        li Relational data / REST - breaking your world up into resources and verbs.
        li Security - how do computers develop trust?
        li Separation of concerns - content, presentation and user interaction are. different things.
        li Testing &amp; regression - machines behaving like people. What people? Design for the most unusual cases.
  section
    h2 Iterative development
    img.featured(src='img/iterative.svg')
    aside.notes
      p Innovation is an ongoing process.
      p The trick is to find the smallest step possible and get that in front of users as quickly as possible, get feedback, and let that inform the next direction.
      p You can do this over and over forever - sometimes what you have made after a few is nowhere near what you thought you were going to make, but it's miles better for it.
      p Regression testing stops later iterations becoming a nightmare to maintain.
section
  h2 Why local micro-business?
  img.featured.borderless(src='img/leeds.svg')
  aside.notes
    ul
      li We care about the city.
      li We are engaged and responsive.
      li We have communities, like Duke Studios.
section
  img.logo(src='img/logo.png')
  p https://www.fishpercolator.co.uk/
  p @fishpercolator
